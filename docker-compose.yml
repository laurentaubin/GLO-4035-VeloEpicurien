version: "3.9"

services:
  jogod:
    container_name:
      jogod
    restart: always
    build: ./JoGod/
    ports:
      - "80:5000"
    volumes:
      - ./JoGod/src:/app/src
    depends_on:
      - fabob
      - mongo
      - neo4j
      - beaubrun

  fabob:
    container_name:
      fabob
    restart: always
    build: ./FaBob/
    ports:
      - "5001:5001"
    volumes:
      - ./FaBob/src:/app/src
    depends_on:
      - mongo
      - neo4j

  beaubrun:
    container_name:
      beaubrun
    restart: always
    build: ./BeauBrun
    ports:
      - "5002:5002"
    volumes:
      - ./BeauBrun/src:/app/src
    depends_on:
      - fabob
      - neo4j
      - mongo

  mongo:
    image: mongo:4.2.0
    container_name:
      mongo_epicurien_tbd
    hostname: mongodb_epicurien
    environment:
      MONGO_INITDB_DATABASE: epicurien
      MONGODB_DATA_DIR: /data/db
    volumes:
      - ./mongo-volume:/data/db
    ports:
      - "27017:27017"

  neo4j:
    image: neo4j:4.2.0
    container_name:
      neo4j_epicurien_tbd
    hostname: neo4j_epicurien
    volumes:
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: none
      NEO4J_dbms_logs_debug_level: DEBUG
      # KAFKA related configuration
      NEO4J_kafka_bootstrap_servers: kafka:19092
      NEO4J_streams_source_topic_nodes_neo4j: Person{*}
      NEO4J_streams_source_topic_relationships_neo4j: KNOWS{*}
    ports:
      - "7474:7474"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper_epicurien_tbd
    ports:
      - "12181:12181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 12181

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka_epicurien_tbd
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092
